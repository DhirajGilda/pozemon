
import Head from 'next/head'
import TopNav from '../components/TopNav'
import Footer from '../components/Footer'
import { useState} from 'react'

import Timer from '../components/Timer'
import TodoList from '../components/TodoList'
import Switch from '@mui/material/Switch';
import { connect } from 'react-redux';

import { useSelector } from 'react-redux';

const defaultStyle = 'flex flex-col min-h-screen justify-center items-center ';

function Home(props) {
   

  const [canSwitch , setCanSwitch] = useState(true);

  const theme = useSelector((state) => state.theme)
  
  const handleChange = () => {
    if(canSwitch){
      props.setMode(!props.mode);
    } else {
      alert('end session')
    }
  };

  return (
    <div className={theme === 'ocean' ? defaultStyle +  'bg-beach-back bg-cover bg-fixed' : theme === 'rain' ? defaultStyle + 'bg-rain-back bg-cover bg-fixed' : defaultStyle + 'bg-forest-back bg-cover bg-fixed'}>
      <Head>
        <title>PomoFocus</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className='w-full sticky top-0 z-10'><TopNav/></header>

      <div className='flex justify-center items-center flex-col min-h-screen p-6  w-full'>
        <div className='p-4 mb-4 rounded-full flex justify-center border border-gray-500 items-center bg-gray-600  firefox:bg-opacity-60  bg-opacity-20 backdrop-filter backdrop-blur-md'>
        <label className={'font-kumbh tracking-widest font-bold bg-clip-text text-transparent ' + (theme==='ocean' ? ' bg-gradient-to-r from-slate-500 to-yellow-100' : theme === 'rain' ? 'bg-gradient-to-r from-yellow-600 to-red-600' : 'bg-gradient-to-r from-emerald-500 to-lime-600')}>WORK</label>  
        <Switch
        checked={props.mode}
        onChange={handleChange}
        inputProps={{ 'aria-label': 'controlled' }}
        sx={{
          '& .Mui-checked': {
            color: theme === 'ocean' ? 'cyan' : theme === 'rain' ? '#ea580c' : 'green'
        },
        '& .MuiSwitch-track': {
            backgroundColor:'white !important'
        }
        }}
        />
        <label className={'font-kumbh tracking-widest font-bold bg-clip-text text-transparent ' + (theme==='ocean' ? ' bg-gradient-to-r from-slate-500 to-yellow-100' : theme === 'rain' ? 'bg-gradient-to-r from-yellow-600 to-red-600' : 'bg-gradient-to-r from-emerald-500 to-lime-600')}>BREAK</label>
        </div>
        <div className='flex justify-center items-center lar:w-3/12 lar:h-3/12 mid:w-4/12 mid:h-4/12'>
          <Timer
          startColor={theme === 'ocean' ? "white" : theme === 'rain' ? '#A27B5C' : 'lightgray'}
          midColor={theme === 'ocean' ? "#00FFFF" : theme === 'rain' ? '#3F4E4F' : '#145314'}
          endColor={theme === 'ocean' ? "#00a7c7" : theme === 'rain' ? '#2C3333' : '#1C352D'}
          gradientId="progress"
          rotation={90}
          running={setCanSwitch}
          />
        </div>

        <div className='flex p-2 justify-center rounded-md w-full sml:w-6/12 mid:w-4/12  text-white bg-gray-600  firefox:bg-opacity-60  bg-opacity-20 backdrop-filter backdrop-blur-md items-center mt-4'>
          <TodoList/>
        </div>
      </div>

      <footer className='w-10/12'><Footer/></footer>
    </div>
  )
}

const mapStateToProps = state => {
  return {
    currentUser : state.user,
    mode: state.mode
  }
};

const mapDispatchToProps = (dispatch) => {
  return {
    setMode: () => dispatch({ type: "SET_MODE" }),
  };
};


export default connect(mapStateToProps,mapDispatchToProps)(Home);